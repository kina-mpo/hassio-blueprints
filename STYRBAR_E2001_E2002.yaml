blueprint:
  name: "MQTT - IKEA STYRBAR E2001/E2002"
  domain: automation
  input:
    remote: { name: "Device", selector: { entity: { domain: sensor, integration: mqtt } } }
    action_on: { name: "Up single-click", default: [], selector: { action: {} } }
    action_brightness_move_up: { name: "Up hold", default: [], selector: { action: {} } }
    action_off: { name: "Down click", default: [], selector: { action: {} } }
    action_brightness_move_down: { name: "Down hold", default: [], selector: { action: {} } }
    #action_brightness_stop: { name: "Up/Down release", default: [], selector: { action: {} } }
    action_arrow_left_click: { name: "Left click", default: [], selector: { action: {} } }
    action_arrow_left_hold: { name: "Left hold", default: [], selector: { action: {} } }
    #action_arrow_left_release: { name: "Left release", default: [], selector: { action: {} } }
    action_arrow_right_click: { name: "Right click", default: [], selector: { action: {} } }
    action_arrow_right_hold: { name: "Right hold", default: [], selector: { action: {} } }
    #action_arrow_right_release: { name: "Right release", default: [], selector: { action: {} } }

trigger: [{ platform: state, entity_id: !input remote }]

action:
  - variables: { command: "{{ trigger.to_state.state }}", interval: "00:00:00.5" }
  - choose: [ { conditions: "{{ command == 'on' }}", sequence: !input action_on } ]
  - choose: [ { conditions: "{{ command == 'brightness_move_up' }}", sequence: !input action_brightness_move_up } ]
  - choose: [ { conditions: "{{ command == 'off' }}", sequence: !input action_off } ]
  - choose: [ { conditions: "{{ command == 'brightness_move_down' }}", sequence: !input action_brightness_move_down } ]
  #- choose: [ { conditions: "{{ command == 'action_brightness_stop' }}", sequence: !input action_action_brightness_stop } ]
  - choose: [ { conditions: "{{ command == 'arrow_left_click' }}", sequence: !input action_arrow_left_click } ]
  - choose: [ { conditions: "{{ command == 'arrow_left_hold' }}", sequence: !input action_arrow_left_hold } ]
  #- choose: [ { conditions: "{{ command == 'arrow_left_release' }}", sequence: !input action_arrow_left_release } ]
  - choose: [ { conditions: "{{ command == 'arrow_right_click' }}", sequence: !input action_arrow_right_click } ]
  - choose: [ { conditions: "{{ command == 'arrow_right_hold' }}", sequence: !input action_arrow_right_hold } ]
  #- choose: [ { conditions: "{{ command == 'arrow_right_release' }}", sequence: !input action_arrow_right_release } ]

mode: restart
